#version 330 core
layout (location = 0) in vec3 inPos;
layout (location = 2) in vec2 inTextureCord;

out vec2 outTextureCord;
/*layout (location = 1) in vec4 inColor;

layout (location = 3) in vec3 inNormal;
layout (location = 4) in vec4 inSpecularColor;

out vec4 outColor;
out vec2 outTextureCord;
out vec3 Normal;
out vec4 outSpecularColor;
out vec3 FragPos;

uniform mat4 model;
uniform mat4 view;
uniform mat4 proj; */

void main()
{
	gl_Position = vec4(inPos, 1.0);
	outTextureCord = inTextureCord;
    /*gl_Position = proj * view * model * vec4(inPos, 1.0);
	FragPos = vec3(view * model * vec4(inPos, 1.0));
	outColor = inColor;
	outSpecularColor = inSpecularColor;

	Normal = mat3(transpose(inverse(view * model))) * inNormal; */
}